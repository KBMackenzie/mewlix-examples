yarn ball brainfuck.parse

from brainfuck.ast takes MoveLeft, MoveRight, Increment, Decrement, Puts, Gets, Loop
from brainfuck.parser takes Parser

mew token_table = std.table()                 \
  .add("<", =^oxo^= (c) => new MoveLeft(c))   \
  .add(">", =^oxo^= (c) => new MoveRight(c))  \
  .add("+", =^oxo^= (c) => new Increment(c))  \
  .add("-", =^oxo^= (c) => new Decrement(c))  \
  .add(".", =^oxo^= (c) => new Puts(c))       \
  .add(",", =^oxo^= (c) => new Gets(c))

=^.x.^= parse(input)
  mew parser = new Parser(input)
  mew tokens = []

  stare while not parser.eof()
    tokens = consume_token(parser, tokens)
  meowmeow

  bring std.reverse(tokens)
meowmeow

=^.x.^= consume_token(parser, tokens)
  mew head = parser.head()
  parser.advance()

  peek if token_table.has(head)
    mew count = 1
    stare while not parser.eof() and parser.head() == head
      parser.advance()
      count = count + 1
    meowmeow

    mew token = token_table.get(head)(count)
    bring token push tokens
  meowmeow

  peek if head == "["
    mew token = consume_loop(parser)
    bring token push tokens
  meowmeow

  peek if head == "]"
    parser.error("Unmatched ']' found in string!")
  meowmeow

  bring tokens
meowmeow

=^.x.^= consume_loop(parser)
  mew tokens = []

  stare while not parser.eof()
    peek if parser.head() == "]"
      parser.advance()
      bring new Loop(std.reverse(tokens))
    meowmeow

    tokens = consume_token(parser, tokens)
  meowmeow

  parser.error("Unclosed loop!")
meowmeow

~( ^.x.^)>
mew TokenTable = std.table()        \
  .add("<", TokenType.MoveLeft)     \
  .add(">", TokenType.MoveRight)    \
  .add("+", TokenType.Increment)    \
  .add("-", TokenType.Decrement)    \
  .add(".", TokenType.Puts)         \
  .add(",", TokenType.Gets)

=^.x.^= parse(input)
  mew parser = new Parser(input)
  mew tokens = []

  stare while not parser.eof()
    tokens = consume_token(tokens, parser)
  meowmeow

  bring std.reverse(tokens)
meowmeow

=^.x.^= consume_token(tokens, parser)
  mew head = parser.head()
  parser.advance()

  peek if head == "["
    mew token = consume_loop(parser) |> Token.loop
    bring token push tokens
  meowmeow

  peek if head == "]"
    parser.error("Unexpected closing bracket ']' outside loop!")
  meowmeow

  peek if TokenTable.has(head)
    mew token = TokenTable.get(head) |> Token.simple

    mew count = 1
    stare while not parser.eof() and parser.head() == head
      parser.advance()
      count = count + 1
    meowmeow

    bring token(count) push tokens
  meowmeow

  bring tokens
meowmeow

=^.x.^= consume_loop(parser)
  mew tokens = []

  stare while parser.head() != "]"
    tokens = consume_token(tokens, parser)
  meowmeow

  parser.advance()
  bring std.reverse(tokens)
meowmeow
<(^.x.^ )~
