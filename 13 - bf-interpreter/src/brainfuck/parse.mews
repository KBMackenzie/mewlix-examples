yarn ball brainfuck.parse

from brainfuck.ast takes MoveLeft, MoveRight, Increment, Decrement, Puts, Gets, Loop
from brainfuck.parser takes Parser

mew token_table!!! = std.table()              \
  .add("<", =^oxo^= (c) => new MoveLeft(c))   \
  .add(">", =^oxo^= (c) => new MoveRight(c))  \
  .add("+", =^oxo^= (c) => new Increment(c))  \
  .add("-", =^oxo^= (c) => new Decrement(c))  \
  .add(".", =^oxo^= (c) => new Puts(c))       \
  .add(",", =^oxo^= (c) => new Gets(c))

=^.x.^= parse(input)
  mew parser = new Parser(input)
  mew tokens = []

  stare while not parser.eof()
    tokens = consume_token(parser, tokens)
  ~meow

  bring std.reverse(tokens)
~meow

=^.x.^= consume_token(parser, tokens)
  mew head = parser.head()
  parser.advance()

  look if token_table.has(head)
    mew count = 1
    stare while not parser.eof() and parser.head() == head
      parser.advance()
      count = count + 1
    ~meow

    mew token = token_table.get(head)(count)
    bring token push tokens
  ~meow

  look if head == "["
    mew token = consume_loop(parser)
    bring token push tokens
  ~meow

  look if head == "]"
    parser.error("Unmatched ']' found in string!")
  ~meow

  bring tokens
~meow

=^.x.^= consume_loop(parser)
  mew tokens = []

  stare while not parser.eof()
    look if parser.head() == "]"
      parser.advance()
      bring new Loop(std.reverse(tokens))
    ~meow

    tokens = consume_token(parser, tokens)
  ~meow

  parser.error("Unclosed loop!")
~meow
